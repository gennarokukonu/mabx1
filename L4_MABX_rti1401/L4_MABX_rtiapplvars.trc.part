-- ******** Simulation control variables **************************************

finalTime
{
 type:  flt(64,IEEE)*
 alias: "finalTime"
 desc:  "Simulation stop time. When reached, simState switches to STOP."
 flags:  READONLY
 unit:  "s"
}

currentTime
{
 type:  flt(64,IEEE)*
 alias: "currentTime"
 desc:  "Current simulation time. Increments with execution of Timer Task 1."
 flags: READONLY
 unit:  "s"
}

modelStepSize
{
 type:  flt(64,IEEE)
 alias: "modelStepSize"
 desc:  "Fixed step size of the model, sample time of Timer Task 1."
 flags: READONLY
 unit:  "s"
}

simState
{
 type:  int(32)
 alias: "simState"
 desc:  "Simulation state: STOP=0 PAUSE=1 RUN=2"
 value: 2
 unit:  "-"
}

msg_last_error_no
{
 type:  uint(32)
 alias: "errorNumber"
 desc:  "Error number of last error message (zero if no error)."
 unit:  "-"
 flags: READONLY
}

p_dsts_sum_of_reset_time
{
 type:  flt(64,IEEE)*
 alias: "sumOfResetTime"
 desc:  "Internal variable for summing up reset time."
 unit:  "s"
 flags: READONLY|HIDDEN
}


-- ******** Task Information variables ****************************************
group "Task Info"
{
 flags: COLLAPSED
}
  group "Timer Task 1"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Task 2"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA2_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA2_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA2_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA2_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA2_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA2_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA2_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA2_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA2_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Task 3"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA3_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA3_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA3_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA3_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA3_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA3_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA3_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA3_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA3_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Task 4"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA4_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA4_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA4_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA4_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA4_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA4_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA4_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA4_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA4_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Task 5"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA5_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA5_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA5_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA5_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA5_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA5_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA5_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA5_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA5_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Task 6"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA6_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA6_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA6_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA6_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA6_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA6_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA6_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA6_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA6_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Task 7"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA7_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA7_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA7_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA7_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA7_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA7_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA7_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA7_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA7_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Task 8"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA8_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA8_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA8_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA8_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA8_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA8_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA8_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA8_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA8_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Task 9"
  {
   flags: COLLAPSED
  }

  pRti_TIMERA9_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERA9_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERA9_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERA9_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERA9_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERA9_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERA9_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERA9_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERA9_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Timer Interrupt"
  {
   flags: COLLAPSED
  }

  pRti_TIMERB_STime
  {
   type:  flt(64,IEEE)*
   alias: "sampleTime"
   flags: READONLY
  }
  pRti_TIMERB_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_TIMERB_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_TIMERB_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_TIMERB_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_TIMERB_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_TIMERB_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_TIMERB_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_TIMERB_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "MABXII_ETH_B1 HWINT0 Task"
  {
   flags: COLLAPSED
  }

  pRti_BB_BYP_ETHT1M0I0S0_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_BB_BYP_ETHT1M0I0S0_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_BB_BYP_ETHT1M0I0S0_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_BB_BYP_ETHT1M0I0S0_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_BB_BYP_ETHT1M0I0S0_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_BB_BYP_ETHT1M0I0S0_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_BB_BYP_ETHT1M0I0S0_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_BB_BYP_ETHT1M0I0S0_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup

  group "Tcp Input Processing"
  {
   flags: COLLAPSED
  }

  pRti_SWI1_TTime
  {
   type:  flt(64,IEEE)*
   alias: "turnaroundTime"
   flags: READONLY
  }
  pRti_SWI1_TState
  {
   type:  int(32)*
   alias: "state"
   flags: READONLY
  }
  pRti_SWI1_OType
  {
   type:  int(32)*
   alias: "overrunCheckType"
   flags: READONLY
  }
  pRti_SWI1_OMax
  {
   type:  int(32)*
   alias: "overrunQueueMax"
   flags: READONLY
  }
  pRti_SWI1_ORpt
  {
   type:  int(32)*
   alias: "overrunQueueCount"
   flags: READONLY
  }
  pRti_SWI1_OCnt
  {
   type:  int(32)*
   alias: "overrunCount"
   flags: READONLY
  }
  pRti_SWI1_TCnt
  {
   type:  flt(64,IEEE)*
   alias: "taskCallCount"
   flags: READONLY
  }
  pRti_SWI1_Prio
  {
   type:  int(32)*
   alias: "priority"
   flags: READONLY
  }
  endgroup


endgroup


