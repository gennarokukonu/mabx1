function export_data_dictionary(varargin)
% EXPORT_DATA_DICTIONARY: Function to export a workspace to an M file.
% There are some restrictions.

import('ptc_matlab_lib.*');

pairs = {'WorkspaceStruct', evalin('caller', 'ptc_matlab_lib.workspacestruct;'), ...
    'ClassNameRegularExpressionFilter', '.*', ...
    'ClassNameRegExpFun', @regexp, ...
    'VariableNameRegularExpressionFilter', '.*', ...
    'VariableNameRegExpFun', @regexp, ...
    'NumericFormatString', '%99.14g', ...
    'OutputFilePath', '', ...
    'ShowWaitbar', true, ...
    'ShouldEcho', true, ...
    'WaitbarParams', cell(0, 1)};
ARGS = parseargs(varargin, pairs);

if isempty(ARGS.OutputFilePath)
    [filename, pathname] = uiputfile({'*.m', 'M File (*.m)'}, 'Save M File', pwd);
    if isequal(filename, 0) || isequal(pathname, 0)
        %Cancel was pressed
        return;
    end
    ARGS.OutputFilePath = fullfile(pathname, filename);
end

varnames = sort(fieldnames(ARGS.WorkspaceStruct));
classnames = cellfun(@(X) class(ARGS.WorkspaceStruct.(X)), varnames, 'UniformOutput', false);
logical_indices = cellfun(@isempty, ARGS.ClassNameRegExpFun(classnames, ARGS.ClassNameRegularExpressionFilter));
varnames(logical_indices) = [];

logical_indices = cellfun(@isempty, ARGS.VariableNameRegExpFun(varnames, ARGS.VariableNameRegularExpressionFilter));
varnames(logical_indices) = [];

vars = partialstruct(ARGS.WorkspaceStruct, varnames);

if ARGS.ShowWaitbar
    ticid = tic;
    waitbar_hndl = waitbar(0, ['Completed 0 of ' num2str(length(varnames))], 'CloseRequestFcn', '', 'Pointer', 'watch', ARGS.WaitbarParams{:});
end

str = cell(length(varnames), 1);
for ctr = 1:length(varnames)
    str{ctr, 1} = ['%% ' varnames{ctr} sprintf('\n') ...
        var2text('VariableName', varnames{ctr}, 'VariableValue', vars.(varnames{ctr}), 'NumericFormatString', ARGS.NumericFormatString)];
    
    if ARGS.ShowWaitbar
        waitbar(ctr/length(varnames), waitbar_hndl, ['Completed ' num2str(ctr) ' of ' num2str(length(varnames))]);
    end
end
str = [strimplode(str, sprintf('\n\n')) sprintf('\n')];

headerstr = [repmat('%', 1, 75) sprintf('\n') ...
    '% Autogenerated by ' mfilename '.m' sprintf('\n') ...
    repmat('%', 1, 75) sprintf('\n\n')];

fid = fopen(ARGS.OutputFilePath, 'w');
fwrite(fid, headerstr);
fwrite(fid, str);
fclose(fid);
if ARGS.ShouldEcho
    disp([isodatetime ' - ' mfilename ' - Created file ' ARGS.OutputFilePath]);
end

if ARGS.ShowWaitbar
    waitbar(1, waitbar_hndl, ['Done, took ' num2str(toc(ticid)) ' seconds']);
    pause(1.0);
    delete(waitbar_hndl);
end

end